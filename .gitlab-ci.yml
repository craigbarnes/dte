stages: [build, dist]

build:alpine:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-alpine
    script: &SCRIPT
        - mk/install-deps.sh
        - export MAKEFLAGS="-j$(mk/nproc.sh)" WERROR=1 V=1
        - make vars check
        - make install
        - dte -V
        - strip dte && du -h dte
        - ldd dte
        - make clean && make uninstall
        - make vars check TERMINFO_DISABLE=1
        - make install
        - dte -V
        - strip dte && du -h dte
        - ldd dte

build:debian:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    variables: {DEBIAN_FRONTEND: noninteractive}
    script:
        - export MAKEFLAGS="-j$(mk/nproc.sh)" WERROR=1 V=1
        - make vars check
        - export TERMINFO_DISABLE=1
        - make clean && make vars dte CC=gcc
        - make clean && make vars dte CC=arm-linux-gnueabihf-gcc
        - make clean && make vars dte CC=aarch64-linux-gnu-gcc

build:centos:
    stage: build
    image: centos:7
    script: *SCRIPT

build:ubuntu:
    stage: build
    image: ubuntu:16.04
    variables: {DEBIAN_FRONTEND: noninteractive}
    script: *SCRIPT

pages:
    stage: dist
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-alpine
    artifacts: {paths: [public]}
    only: [master]
    script: &PAGES_SCRIPT
        - export MAKEFLAGS="-j$(mk/nproc.sh)" WERROR=1 V=1
        - git fetch --tags
        - make docs
        - make vars check TERMINFO_DISABLE=1 CC=gcc LDFLAGS='--static'
        - strip dte
        - du -h dte
        - ldd dte || true
        - TARNAME="$(./dte -V | head -n1 | tr -- ' ' -)-linux-$(uname -m)"
        - tar -czf "public/$TARNAME.tar.gz" dte dte.1 dte-syntax.5
        - ln -s "$TARNAME.tar.gz" public/dte-master-linux-$(uname -m).tar.gz
        - tree public/

# Same as "pages" but without public artifacts (for testing non-master branches)
pages:non-master:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-alpine
    except: [master]
    script: *PAGES_SCRIPT
