stages: [build, dist]

default:
    before_script:
        - git fetch --tags
        - export MAKEFLAGS="-j$(mk/nproc.sh)" DEBUG=3 WERROR=1 V=1
        - make vars

build:alpine:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-alpine
    script: &SCRIPT
        - make check TERMINFO_DISABLE=1
        - ldd dte
        - make clean && make check TERMINFO_DISABLE=1 LDFLAGS=-static
        - ldd dte || true
        - make clean && make check
        - ldd dte
        - make clean && make check CSTD='-std=c99 -D_POSIX_C_SOURCE=200809L'
        - make clean && make DEBUG=0 && make install && dte -V
        - strip dte && du -k -h dte
        - tools/objsize.sh dte

build:debian:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    script:
        - make check && make install && dte -V
        - make check-syntax-files
        - sed -f tools/extract-readme-code.sed README.md | sh -e
        - export TERMINFO_DISABLE=1
        - make clean && make check CC=gcc
        - make clean && make check CC=clang
        - make clean && make check CC=tcc
        - make clean && make dte CC=arm-linux-gnueabihf-gcc
        - make clean && make dte CC=aarch64-linux-gnu-gcc
        - export LDFLAGS=-static
        - make clean && make check CC=gcc
        - make clean && make check CC=clang
        - make clean && make dte CC=arm-linux-gnueabihf-gcc
        - make clean && make dte CC=aarch64-linux-gnu-gcc
        - git archive --prefix=dte-head/ -o dte-head.tar.gz HEAD
        - tar -xzf dte-head.tar.gz
        - make -C dte-head/ check install prefix=/usr DESTDIR=pkg
        - dte-head/pkg/usr/bin/dte -V

build:android:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/android-ndk
    script:
        - export TERMINFO_DISABLE=1
        - make clean && make CC="$CC_ARMV7A"
        - make clean && make CC="$CC_AARCH64"
        - make clean && make CC="$CC_I686"
        - make clean && make CC="$CC_X86_64"

build:centos:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-centos
    script: *SCRIPT

build:ubuntu:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-ubuntu
    script: *SCRIPT

build:void-musl:
    stage: build
    script: *SCRIPT
    image:
        name: registry.gitlab.com/craigbarnes/dockerfiles/cdev-void-musl
        entrypoint: []

.pages:
    stage: dist
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    artifacts: {paths: [public]}
    coverage: '/^ *lines\.*: *(\d+\.\d+\%) .*$/'
    script:
        - make docs
        - make coverage-report
        - make vars check CC=musl-gcc LDFLAGS=-static TERMINFO_DISABLE=1 DEBUG=0
        - strip dte
        - tools/objsize.sh dte
        - ldd dte || true
        - TARNAME="$(./dte -V | head -n1 | tr -- ' ' -)-linux-$(uname -m)"
        - tar -czf "public/$TARNAME.tar.gz" dte docs/dte.1 docs/dterc.5 docs/dte-syntax.5
        - ln -s "$TARNAME.tar.gz" public/dte-master-linux-$(uname -m).tar.gz
        - tree public/

pages:
    extends: .pages
    only: [master]

pages:non-master:
    extends: .pages
    except: [master]
    artifacts: {expire_in: 1 week}
