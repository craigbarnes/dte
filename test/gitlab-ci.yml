stages: [build, dist]

before_script:
    - git fetch --tags
    - export MAKEFLAGS="-j$(mk/nproc.sh)" WERROR=1 V=1
    - make vars

build:alpine:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-alpine
    script: &SCRIPT
        - make check TERMINFO_DISABLE=1
        - ldd dte
        - make clean
        - make check TERMINFO_DISABLE=1 LDFLAGS=-static
        - ldd dte || true
        - make clean
        - make check
        - ldd dte
        - make install && dte -V
        - strip dte && du -k -h dte
        - tools/objsize.sh dte

build:debian:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    script:
        - make check && make install && dte -V
        - make clean && make check USE_LUA=dynamic && ./dte -V
        - make clean && make check USE_LUA=static && ./dte -V
        - make check-syntax-files
        - sed -nf tools/extract-readme-code.sed README.md | sh -e
        - export TERMINFO_DISABLE=1
        - make clean && make check CC=gcc
        - make clean && make check CC=clang
        - make clean && make check CC=tcc
        - make clean && make dte CC=arm-linux-gnueabihf-gcc
        - make clean && make dte CC=aarch64-linux-gnu-gcc
        - export LDFLAGS=-static
        - make clean && make check CC=gcc
        - make clean && make check CC=clang
        - make clean && make dte CC=arm-linux-gnueabihf-gcc
        - make clean && make dte CC=aarch64-linux-gnu-gcc

build:centos:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-centos
    script: *SCRIPT

build:ubuntu:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-ubuntu
    script: *SCRIPT

build:void-musl:
    stage: build
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-void-musl
    script: *SCRIPT

pages:
    stage: dist
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    artifacts: {paths: [public]}
    only: [master]
    coverage: '/^ *lines\.*: *(\d+\.\d+\%) .*$/'
    script: &PAGES_SCRIPT
        - make docs
        - make coverage-report
        - make vars check CC=musl-gcc LDFLAGS=-static TERMINFO_DISABLE=1 DEBUG=0
        - strip dte
        - tools/objsize.sh dte
        - ldd dte || true
        - TARNAME="$(./dte -V | head -n1 | tr -- ' ' -)-linux-$(uname -m)"
        - tar -czf "public/$TARNAME.tar.gz" dte docs/dte.1 docs/dterc.5 docs/dte-syntax.5
        - ln -s "$TARNAME.tar.gz" public/dte-master-linux-$(uname -m).tar.gz
        - tree public/

# Same as "pages" but for non-master branches
pages:non-master:
    stage: dist
    image: registry.gitlab.com/craigbarnes/dockerfiles/cdev-debian
    artifacts: {paths: [public], expire_in: 1 week}
    except: [master]
    coverage: '/^ *lines\.*: *(\d+\.\d+\%) .*$/'
    script: *PAGES_SCRIPT
