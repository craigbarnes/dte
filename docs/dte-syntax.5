.TH DTE\-SYNTAX 5 "October 2024"
.nh
.ad l
.
.SH NAME
dte\-syntax \- Format of syntax highlighting files used by \fBdte\fR(1)
.SH SYNOPSIS
.P
Commands:
.br
.P
Main commands:
.br
   \fBsyntax\fR \fIname\fR
.br
   \fBstate\fR \fIname\fR [\fIemit\-name\fR]
.br
   \fBdefault\fR \fIcolor\fR \fIname\fR...
.br
   \fBlist\fR [\fB\-i\fR] \fIname\fR \fIstring\fR...
.br
.P
Conditionals:
.br
   \fBbufis\fR [\fB\-i\fR] \fIstring\fR \fIdestination\fR [\fIemit\-name\fR]
.br
   \fBchar\fR [\fB\-bn\fR] \fIcharacters\fR \fIdestination\fR [\fIemit\-name\fR]
.br
   \fBheredocend\fR \fIdestination\fR
.br
   \fBinlist\fR \fIlist\fR \fIdestination\fR [\fIemit\-name\fR]
.br
   \fBstr\fR [\fB\-i\fR] \fIstring\fR \fIdestination\fR [\fIemit\-name\fR]
.br
.P
Default actions:
.br
   \fBeat\fR \fIdestination\fR [\fIemit\-name\fR]
.br
   \fBheredocbegin\fR \fIsubsyntax\fR \fIreturn\-state\fR
.br
   \fBnoeat\fR [\fB\-b\fR] \fIdestination\fR
.br
.P
Other commands:
.br
   \fBrecolor\fR \fIcolor\fR [\fIcount\fR]
.br
.SH DESCRIPTION
A dte syntax file consists of multiple states. A \fBstate\fR consists of
optional conditionals and one default action. The best way understand
the syntax is to read through some of the built\-in syntax files, which
can be printed with \fBdte \-b\fR, for example:
.P
.IP
.nf
\f[C]
dte\ \-b\ syntax/dte
\f[]
.fi
.PP
The basic syntax used is the same as in \fBdterc\fR(5) files, but the available
commands are different.
.P
.SH COMMANDS
.SS Main commands
\fBsyntax\fR \fIname\fR
.RS
Begin a new syntax. One syntax file can contain multiple syntax
definitions, but you should only define one real syntax in one
syntax file.
.P
See also: sub\-syntaxes.
.P
.RE
\fBstate\fR \fIname\fR [\fIemit\-name\fR]
.RS
Add new state. Conditionals (if any) and one default action
must follow. The first state in each \fBsyntax\fR is the start state.
.P
.RE
\fBdefault\fR \fIcolor\fR \fIname\fR...
.RS
Set default \fIcolor\fR for emitted \fIname\fR.
.P
Example:
.P
.IP
.nf
\f[C]
default\ numeric\ oct\ dec\ hex
\f[]
.fi
.PP
If there is no color defined for \fIoct\fR, \fIdec\fR or \fIhex\fR then color
\fInumeric\fR is used instead.
.P
See also: the \fBhi\fR command in \fBdterc\fR(5).
.P
.RE
\fBlist\fR [\fB\-i\fR] \fIname\fR \fIstring\fR...
.RS
Define a list of strings, for use with the \fBinlist\fR command.
.P
Example:
.P
.IP
.nf
\f[C]
list\ keyword\ if\ else\ for\ while\ do\ continue\ switch\ case
\f[]
.fi
.PP
.TP
\fB\-i\fR
Make list case\-insensitive
.PP
.RE
.SS Conditionals
Any number of conditionals can appear between a \fBstate\fR command
and its final default action.
.P
During syntax highlighting, when a state is entered, its conditions
are checked in the same order as authored. If a condition is met, the
matching text is colored in accordance with the \fIemit\-name\fR argument
and processing transitions to the \fIdestination\fR state.
.P
If the \fIemit\-name\fR argument of a conditional is left unspecified, the
\fIemit\-name\fR (or \fIname\fR) of the \fIdestination\fR state is used
instead. This can often be used to reduce verbosity.
.P
The special \fIdestination\fR state \fBthis\fR can be used to jump to the
current state.
.P
\fBbufis\fR [\fB\-i\fR] \fIstring\fR \fIdestination\fR [\fIemit\-name\fR]
.RS
Test if buffered bytes are the same as \fIstring\fR. If they are, emit
\fIemit\-name\fR and jump to \fIdestination\fR state.
.P
.TP
\fB\-i\fR
Case\-insensitive
.PP
.RE
\fBchar\fR [\fB\-bn\fR] \fIcharacters\fR \fIdestination\fR [\fIemit\-name\fR]
.RS
Test if the current byte appears in \fIcharacters\fR. If so, emit
\fIemit\-name\fR and jump to \fIdestination\fR state.
.P
Character ranges can be specified by using \fB\-\fR as a delimiter.
For example, \fBa\-f\fR is the same as \fBabcdef\fR and \fBa\-d.q\-t\-\fR is
the same as \fBabcd.qrst\-\fR.
.P
.TP
\fB\-b\fR
Add byte to buffer (if matched)
.PP
.TP
\fB\-n\fR
Invert character bitmap
.PP
.RE
\fBheredocend\fR \fIdestination\fR
.RS
Compare following characters to heredoc end delimiter (as established by
\fBheredocbegin\fR) and go to destination state, if comparison is true.
.P
.RE
\fBinlist\fR \fIlist\fR \fIdestination\fR [\fIemit\-name\fR]
.RS
Test if the buffered bytes are found in \fIlist\fR. If found, emit
\fIemit\-name\fR and jump to \fIdestination\fR state.
.P
.RE
\fBstr\fR [\fB\-i\fR] \fIstring\fR \fIdestination\fR [\fIemit\-name\fR]
.RS
Check if the next bytes are the same as \fIstring\fR. If so, emit
\fIemit\-name\fR and jump to the \fIdestination\fR state.
.P
.TP
\fB\-i\fR
Case\-insensitive
.PP
NOTE: This conditional can be slow, especially if \fIstring\fR is
longer than two bytes.
.P
.RE
.SS Default actions
The last command of every \fBstate\fR must be a default action. It
represents an unconditional jump to a \fIdestination\fR state.
.P
As with conditionals, the special \fIdestination\fR state \fBthis\fR can
be used to re\-enter the current state.
.P
\fBeat\fR \fIdestination\fR [\fIemit\-name\fR]
.RS
Consume byte, emit \fIemit\-name\fR color and continue to \fIdestination\fR
state.
.P
.RE
\fBheredocbegin\fR \fIsubsyntax\fR \fIreturn\-state\fR
.RS
Store buffered bytes as the heredoc end delimiter and go to \fIsubsyntax\fR.
The sub\-syntax is like any other sub\-syntax, but it must contain a
\fBheredocend\fR conditional.
.P
.RE
\fBnoeat\fR [\fB\-b\fR] \fIdestination\fR
.RS
Continue to \fIdestination\fR state without emitting color or consuming
byte.
.P
.TP
\fB\-b\fR
Don't stop buffering
.PP
.RE
.SS Other commands
\fBrecolor\fR \fIcolor\fR [\fIcount\fR]
.RS
If \fIcount\fR is given, recolor \fIcount\fR previous bytes. Otherwise,
recolor buffered bytes.
.P
This command should be used sparingly, since it recolors text that was
already consumed and colored by the other commands above. In most cases
it makes sense to assign the correct color on the first pass, unless
doing so is not possible or is considerably more verbose.
.P
.RE
.SH SUB\-SYNTAXES
Sub\-syntaxes are useful when the same states are needed in many contexts.
.P
Sub\-syntax names must be prefixed with \fB.\fR. It's recommended to also use
the main syntax name in the prefix. For example \fB.c\-comment\fR if \fBc\fR is
the main syntax.
.P
A sub\-syntax is a syntax in which some \fIdestination\fR state name is
\fBEND\fR. \fBEND\fR is a special state name that is replaced by the state
specified in another syntax.
.P
Example:
.P
.IP
.nf
\f[C]
#\ Sub\-syntax
syntax\ .c\-comment

state\ comment
\ \ \ \ char\ "*"\ star
\ \ \ \ eat\ comment

state\ star\ comment
\ \ \ \ #\ END\ is\ a\ special\ state\ name
\ \ \ \ char\ /\ END\ comment
\ \ \ \ noeat\ comment

#\ Main\ syntax
syntax\ c

state\ c\ code
\ \ \ \ char\ "\ \et\en"\ c
\ \ \ \ char\ \-b\ a\-zA\-Z_\ ident
\ \ \ \ char\ "\e""\ string
\ \ \ \ char\ "\[aq]"\ char
\ \ \ \ #\ Call\ sub\-syntax
\ \ \ \ str\ "/*"\ .c\-comment:c
\ \ \ \ eat\ c

#\ Other\ states\ removed
\f[]
.fi
.PP
In this example the \fIdestination\fR state \fB.c\-comment:c\fR is a special syntax
for calling a sub\-syntax. \fB.c\-comment\fR is the name of the sub\-syntax and
\fBc\fR is the return state defined in the main syntax. The whole sub\-syntax
tree is copied into the main syntax and all destination states in the
sub\-syntax whose name is \fBEND\fR are replaced with \fBc\fR.
.P
.
.SH SEE ALSO
\fBdte\fR(1),
\fBdterc\fR(5)
.SH AUTHORS
Craig Barnes
.br
Timo Hirvonen
