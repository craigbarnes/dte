#!/bin/sh
# The output of this script is used to generate build/gen/cc-target.mk
# shellcheck disable=SC2086

set -eu
CC="$1"
CFLAGS="$2"

if ! $CC $CFLAGS -c -o /dev/null mk/feature-test/basic.c; then
    echo "$0:$LINENO: ERROR: Basic sanity test for \$CC ($CC) failed" >&2
    exit 1
fi

TARGET="$($CC $CFLAGS -dumpmachine)"

echo '# Generated by mk/cc-target.sh; do not edit'
echo "CC_TARGET = $TARGET"

if test -z "$TARGET"; then
    # If $TARGET is empty, fall back to using a value derived from uname(1)
    # output (for the purpose of setting platform-specific variables below)
    case "$(uname -s)" in
        Darwin) TARGET='x-darwin' ;;
        OpenBSD) TARGET='x-openbsd' ;;
        NetBSD) TARGET='x-netbsd' ;;
        CYGWIN*) TARGET='x-cygwin' ;;
    esac
fi

# TODO: Determine whether NDKs for API levels 25/26/27 should be treated
# differently here

case "$TARGET" in
*-linux-android2[89]|*-linux-android[3-9][0-9]*)
    # The compiler in the Android NDK for API 28 produces the following error
    # if `-liconv` is used: "ld.lld: error: unable to find library -liconv"
    echo 'NO_INSTALL_XDG_CLUTTER = 1' ;;
*-linux-android*)
    # ...whereas the compiler targeting API level 24 complains about undefined
    # `libiconv_*` symbols if `-liconv` is NOT used
    echo 'LDLIBS_ICONV = -liconv'
    echo 'NO_INSTALL_XDG_CLUTTER = 1' ;;
*-darwin*)
    echo 'LDLIBS_ICONV = -liconv'
    echo 'NO_INSTALL_XDG_CLUTTER = 1' ;;
*-openbsd*)
    echo 'LDLIBS_ICONV = -liconv'
    echo 'BASIC_CPPFLAGS += -I/usr/local/include'
    echo 'BASIC_LDFLAGS += -L/usr/local/lib' ;;
*-netbsd*)
    echo 'BASIC_CPPFLAGS += -I/usr/pkg/include'
    echo 'BASIC_LDFLAGS += -L/usr/pkg/lib' ;;
*-cygwin*)
    echo 'LDLIBS_ICONV = -liconv'
    echo 'EXEC_SUFFIX = .exe' ;;
esac
