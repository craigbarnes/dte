syntax .xml-entity

state entity
    char # hash
    char -b a-zA-Z:_ name
    recolor error 1
    char "\n" END
    eat END error

state hash entity
    char xX x
    char 0-9 dec
    eat END error

state x entity
    char 0-9a-fA-F hex
    eat END error

state hex entity
    char 0-9a-fA-F this
    char ";" END entity
    eat END error

state dec entity
    char 0-9 this
    char ";" END entity
    eat END error

state name entity
    char -b a-zA-Z0-9:_.- this
    char -b ";" maybe-predef
    recolor error
    eat END error

state maybe-predef
    inlist predefined-entity END
    noeat END

list predefined-entity '&quot;' '&apos;' '&amp;' '&lt;' '&gt;'

syntax xml

state line1 text
    char " \t\n" this
    str "<?" xml
    str -i "<!doctype" doctype
    noeat text

state line2 text
    char " \t\n" this
    str -i "<!doctype" doctype
    noeat text

# Eat <?xml ... ?>
state xml comment
    char > line2 comment
    char < line2 error
    eat this

# TODO: Conform more strictly to the spec for `doctypedecl`:
# https://www.w3.org/TR/2008/REC-xml-20081126/#NT-doctypedecl
state doctype comment
    char " \t\r\nA-Za-z:_.-" this
    char [ markupdecl
    char > text comment
    char < text error
    eat this

state markupdecl comment
    char ] maybe-markupdecl-end
    eat this

state maybe-markupdecl-end comment
    char " \t\r\n" this
    char > text comment
    noeat markupdecl

state text
    str "<!" maybe-comment-or-cdata
    char < tag-start
    char > this error
    char -b "&" .xml-entity:this
    eat this

state maybe-comment-or-cdata comment
    str -- '--' comment
    str '[CDATA[' cdata-open
    recolor error 2
    noeat tag-start

state comment
    str -- '-->' text comment
    eat this

state cdata-open
    recolor cdata-delim 9
    noeat cdata

state cdata
    char ] cdata-maybe-close
    eat this

state cdata-maybe-close cdata
    str ']>' cdata-close
    noeat cdata

state cdata-close
    recolor cdata-delim 3
    noeat text

state tag-start tag
    char / close-tag
    char -b a-zA-Z_: tag-name
    char > text tag
    eat this error

state close-tag tag
    char -b a-zA-Z_: close-tag-name
    eat text error

state tag-name tag
    char -b a-zA-Z0-9_:.- this
    noeat attrs

state close-tag-name tag
    char -b a-zA-Z0-9_:.- this
    noeat close-tag-end

state close-tag-end special
    char " \t\n" this
    char > text tag
    eat text error

state attrs code
    char " \t\n" this
    char -b a-zA-Z:_ attr-name
    char > text tag
    char / short-close
    eat this error

state short-close tag
    char > text tag
    eat text error

state attr-name attr
    char a-zA-Z0-9_:.- this
    char = attr-eq
    noeat attrs

state attr-eq attr
    char \" dq
    char \' sq
    noeat attrs

state dq string
    char \" attrs string
    char "\n" attrs
    char -b "&" .xml-entity:this
    eat this

state sq string
    char \' attrs string
    char "\n" attrs
    char -b "&" .xml-entity:this
    eat this

default numeric entity predefined-entity
default text cdata
default constant cdata-delim
